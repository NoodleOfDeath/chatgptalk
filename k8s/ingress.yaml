apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readless-web
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - www.readless.ai
      secretName: tls-www.readless.ai
  rules:
    - host: www.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-web-prod
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readless-web-redirect
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: |
      https://www.readless.ai/$1
spec:
  tls:
    - hosts:
        - readless.ai
      secretName: tls-readless.ai
  rules:
    - host: readless.ai
    - http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: http-svc
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readless-api
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - api.readless.ai
      secretName: tls-api.readless.ai
  rules:
    - host: api.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-api-prod
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readless-applink-prod
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - applink.readless.ai
      secretName: tls-applink.readless.ai
    - hosts:
        - open.readless.ai
      secretName: tls-open.readless.ai
  rules:
    - host: applink.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-applink-prod
                port:
                  number: 80
    - host: open.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-applink-prod
                port:
                  number: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: serge
#   namespace: ingress-nginx
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.org/websocket-services: serge
#     nginx.ingress.kubernetes.io/auth-type: basic
#     # name of the secret that contains the user/password definitions
#     nginx.ingress.kubernetes.io/auth-secret: serge-auth
#     # message to display with an appropriate context why the authentication is required
#     nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
# spec:
#   tls:
#     - hosts:
#         - llama.readless.ai
#       secretName: tls-llama.readless.ai
#   rules:
#     - host: llama.readless.ai
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: serge
#                 port:
#                   number: 8008
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readless-web-dev
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: dev-auth
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  tls:
    - hosts:
        - dev.readless.ai
      secretName: tls-dev.readless.ai
  rules:
    - host: dev.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-web-dev
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readless-api-dev
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - api.dev.readless.ai
      secretName: tls-api.dev.readless.ai
  rules:
    - host: api.dev.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-api-dev
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readless-applink-dev
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - applink.dev.readless.ai
      secretName: tls-applink.dev.readless.ai
    - hosts:
        - open.dev.readless.ai
      secretName: tls-open.dev.readless.ai
  rules:
    - host: applink.dev.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-applink-dev
                port:
                  number: 80
    - host: open.dev.readless.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: readless-applink-dev
                port:
                  number: 80