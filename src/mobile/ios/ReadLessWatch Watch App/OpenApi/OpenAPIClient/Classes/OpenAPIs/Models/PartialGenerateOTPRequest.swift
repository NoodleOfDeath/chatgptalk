//
// PartialGenerateOTPRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Make all properties in T optional */
public struct PartialGenerateOTPRequest: Codable, JSONEncodable, Hashable {

    public var email: String?
    public var eth2Address: String?
    public var phone: String?
    public var thirdParty: ThirdPartyAuth?
    public var userId: Double?
    public var username: String?
    public var thirdPartyGoogle: String?

    public init(email: String? = nil, eth2Address: String? = nil, phone: String? = nil, thirdParty: ThirdPartyAuth? = nil, userId: Double? = nil, username: String? = nil, thirdPartyGoogle: String? = nil) {
        self.email = email
        self.eth2Address = eth2Address
        self.phone = phone
        self.thirdParty = thirdParty
        self.userId = userId
        self.username = username
        self.thirdPartyGoogle = thirdPartyGoogle
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case email
        case eth2Address
        case phone
        case thirdParty
        case userId
        case username
        case thirdPartyGoogle = "thirdParty/google"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(eth2Address, forKey: .eth2Address)
        try container.encodeIfPresent(phone, forKey: .phone)
        try container.encodeIfPresent(thirdParty, forKey: .thirdParty)
        try container.encodeIfPresent(userId, forKey: .userId)
        try container.encodeIfPresent(username, forKey: .username)
        try container.encodeIfPresent(thirdPartyGoogle, forKey: .thirdPartyGoogle)
    }
}

