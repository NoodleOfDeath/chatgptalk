//
// ThirdPartyAuth.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ThirdPartyAuth: Codable, JSONEncodable, Hashable {

    public var credential: String?
    public var userId: ThirdPartyAuthUserId?
    public var name: ThirdParty

    public init(credential: String? = nil, userId: ThirdPartyAuthUserId? = nil, name: ThirdParty) {
        self.credential = credential
        self.userId = userId
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case credential
        case userId
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(credential, forKey: .credential)
        try container.encodeIfPresent(userId, forKey: .userId)
        try container.encode(name, forKey: .name)
    }
}

