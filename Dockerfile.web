FROM node:19.3.0 as base
RUN npm i -g tsoa

WORKDIR /home/node
COPY src/server ./server
WORKDIR /home/node/app
COPY package.json ./
COPY yarn.lock ./
RUN yarn install --non-interactive --immutable
COPY src/web/package.json ./
COPY src/web/yarn.lock ./
RUN yarn install --non-interactive --immutable

FROM base as pre-build
COPY src/web/src ./src
COPY src/web/public ./public
COPY src/web/tsconfig.json ./
COPY src/web/next-env.d.ts ./
RUN yarn tsoa

FROM pre-build as build
ARG NEXT_PUBLIC_API_ENDPOINT
ENV NEXT_PUBLIC_API_ENDPOINT=${NEXT_PUBLIC_API_ENDPOINT}
ARG NEXT_PUBLIC_GENERATE_SOURCEMAP
ENV NEXT_PUBLIC_GENERATE_SOURCEMAP=${NEXT_PUBLIC_GENERATE_SOURCEMAP}
ARG NEXT_PUBLIC_GOOGLE_CLIENT_ID
ENV NEXT_PUBLIC_GOOGLE_CLIENT_ID=${NEXT_PUBLIC_GOOGLE_CLIENT_ID}
RUN echo > .env
RUN echo NEXT_PUBLIC_API_ENDPOINT=\"${NEXT_PUBLIC_API_ENDPOINT}\" >> .env
RUN echo NEXT_PUBLIC_GENERATE_SOURCEMAP=\"${NEXT_PUBLIC_GENERATE_SOURCEMAP}\" >> .env
RUN echo NEXT_PUBLIC_GOOGLE_CLIENT_ID=\"${NEXT_PUBLIC_GOOGLE_CLIENT_ID}\" >> .env

ENV NODE_ENV=production
RUN yarn build

FROM nginx:alpine as web
COPY src/web/nginx.conf /etc/nginx/nginx.conf
COPY --from=build /home/node/app/build /etc/nginx/html
