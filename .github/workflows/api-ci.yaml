name: API CI

on:
  push:
    branches:
      - main
      - dev
    paths:
      - ".github/workflows/api-ci.yaml"
      - "k8s/api-deploy.yaml"
      - "src/server/Dockerfile.api"
      - "src/server/package.json"
      - "src/server/public/**"
      - "src/server/src/api/**"

concurrency:
  group: ${{ github.ref }}-api
  cancel-in-progress: true

env:
  IMAGE: ${{ github.event.repository.name }}-api-${{ fromJSON('{"main":"prod"}')[github.ref_name] || github.ref_name }}
  REGISTRY: ${{ vars.REGISTRY }}
  WORKING_DIR: src/server

jobs:
  build-api:
    runs-on: ubuntu-latest
    environment: ${{ fromJSON('{"main":"prod"}')[github.ref_name] || github.ref_name }}
    steps:
      - name: Print Job Description
        run: |
          echo building \"$IMAGE\" from branch \"${{ github.ref_name }}\"
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_SSH_KEY }}
          submodules: recursive
      - name: Build
        run: |
          cd $WORKING_DIR && \
          docker build . --file Dockerfile.api --tag $IMAGE:latest
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to doctl
        run: doctl registry login --expiry-seconds 180
      - name: Tag Docker Image
        run: docker tag $IMAGE:latest $REGISTRY/$IMAGE:latest
      - name: Push Docker Image
        run: docker push $REGISTRY/$IMAGE:latest

  deploy-api:
    needs: build-api
    runs-on: ubuntu-latest
    environment: ${{ fromJSON('{"main":"prod"}')[github.ref_name] || github.ref_name }}
    env:
      CORS_ORIGIN: ${{ vars.CORS_ORIGIN }}
      K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
      K8S_MEMORY_REQUESTS: ${{ vars.K8S_MEMORY_REQUESTS }}
      K8S_CPU_REQUESTS: ${{ vars.K8S_CPU_REQUESTS }}
      K8S_MEMORY_LIMITS: ${{ vars.K8S_MEMORY_LIMITS }}
      K8S_CPU_LIMITS: ${{ vars.K8S_CPU_LIMITS }}
      K8S_REPLICA_COUNT_API: ${{ vars.K8S_REPLICA_COUNT_API }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      PG_CONNECTION_STRING: ${{ secrets.PG_CONNECTION_STRING }}
      PORT: ${{ vars.PORT }}
      RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
      REDIS_CONNECTION_STRING: ${{ secrets.REDIS_CONNECTION_STRING }}
      WS_API_KEY: ${{ secrets.WS_API_KEY }}
    steps:
      - name: Print Job Description
        run: |
          echo deploying \"$IMAGE\" from branch \"${{ github.ref_name }}\"
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_SSH_KEY }}
          submodules: recursive
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Add kubectl cert
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_CLUSTER_ID }}
      - name: Apply deployment changes
        run: envsubst < $GITHUB_WORKSPACE/k8s/api-deploy.yaml | kubectl apply -f -
      - name: Deploy Rollout
        run: kubectl rollout restart deployment/$IMAGE --namespace $K8S_NAMESPACE
      - name: Verify deployment
        run: kubectl rollout status deployment/$IMAGE --namespace $K8S_NAMESPACE
